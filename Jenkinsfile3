pipeline {
    agent any

    environment {
        TF_VERSION = '1.7.5'
        AZURE_SERVICE_CONNECTION = 'azure-service-principal' 
    }

    stages {
        stage('Initialize Terraform') {
            steps {
                withCredentials([azureServicePrincipal(
                    credentialsId: "${env.AZURE_SERVICE_CONNECTION}",
                    subscriptionIdVariable: 'SUBSCRIPTION_ID',
                    clientIdVariable: 'CLIENT_ID',
                    clientSecretVariable: 'CLIENT_SECRET',
                    tenantIdVariable: 'TENANT_ID'
                )]) {
                    sh '''
                        echo "Setting Azure environment variables"
                        export ARM_SUBSCRIPTION_ID=$SUBSCRIPTION_ID
                        export ARM_CLIENT_ID=$CLIENT_ID
                        export ARM_CLIENT_SECRET=$CLIENT_SECRET
                        export ARM_TENANT_ID=$TENANT_ID

                        echo "Initializing Terraform"
                        terraform init
                    '''
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                sh 'terraform plan'
            }
        }

        stage('Terraform Apply') {
            steps {
                input "Apply Terraform Changes?"
                sh 'terraform apply -auto-approve'
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
